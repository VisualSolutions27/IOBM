<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!--Control colors.-->
	<Color x:Key="WindowColor">#FFE8EDF9</Color>
	<Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
	<Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

	<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
	<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
	<Color x:Key="DisabledForegroundColor">#FF888888</Color>

	<Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
	<Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

	<Color x:Key="ControlLightColor">White</Color>
	<Color x:Key="ControlMediumColor">#FF7381F9</Color>
	<Color x:Key="ControlDarkColor">#FF211AA9</Color>

	<Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
	<Color x:Key="ControlPressedColor">#FF211AA9</Color>

	<Color x:Key="GlyphColor">#FF444444</Color>
	<Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

	<!--Border colors-->
	<Color x:Key="BorderLightColor">#FFCCCCCC</Color>
	<Color x:Key="BorderMediumColor">#FF888888</Color>
	<Color x:Key="BorderDarkColor">#FF444444</Color>

	<Color x:Key="PressedBorderLightColor">#FF888888</Color>
	<Color x:Key="PressedBorderDarkColor">#FF444444</Color>

	<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
	<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

	<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

	<!--Control-specific resources.-->
	<Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
	<Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
	<Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

	<Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

	<LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
		<GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
		<GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#000000FF" Offset="0" />
				<GradientStop Color="#600000FF" Offset="0.4" />
				<GradientStop Color="#600000FF" Offset="0.6" />
				<GradientStop Color="#000000FF" Offset="1" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style x:Key="RightAlignStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="LeftAlignStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextAlignment" Value="Left" />
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="CenterAlignStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextAlignment" Value="Center" />
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<!-- Header Styles -->
	<Style x:Key="ClientHeaderTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="FontWeight" Value="SemiBold" />
		<Setter Property="Foreground" Value="Maroon" />
	</Style>

	<Style x:Key="MenuGroupTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontWeight" Value="SemiBold" />
		<Setter Property="Foreground" Value="Maroon" />
	</Style>

	<Style x:Key="WelcomeTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Margin" Value="0,0,20,0" />
	</Style>

	<!-- Footer Styles -->
	<Style x:Key="FooterTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<!-- User Control Style -->
    <Style x:Key="UXGroupBoxStyle" TargetType="GroupBox">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontWeight="Bold"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="10,5,10,5" />
        <Setter Property="Padding" Value="5" />
    </Style>
    
    <Style x:Key="UXBorderStyle" TargetType="Border">
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="10" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Padding" Value="5" />
	</Style>

	<Style x:Key="UXHeaderStyle" TargetType="Border">
		<Setter Property="Background" Value="#BF004C5B" />
		<Setter Property="BorderBrush" Value="DarkGray" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Height" Value="28" />
		<Setter Property="Margin" Value="0,0,0,0" />
	</Style>

	<Style x:Key="UXHeaderTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontSize" Value="16" />
		<Setter Property="FontWeight" Value="SemiBold" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Margin" Value="10,2,0,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="UXLabelTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="UXTextBoxStyle" TargetType="TextBox">
		<Setter Property="FontFamily" Value="Phoma" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Padding" Value="1,2,0,0"></Setter>
	</Style>

	<Style x:Key="UXButtonStyle" TargetType="Button">
		<Setter Property="FontFamily" Value="Phoma" />
		<Setter Property="Height" Value="22" />
		<Setter Property="Width" Value="80" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="UXHeaderImageButtonStyle" TargetType="Button">
		<Setter Property="Height" Value="24" />
		<Setter Property="Width" Value="28" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="UXImageButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="28" />
    </Style>
    
    <Style x:Key="UXImageTextButtonStyle" TargetType="Button">
		<Setter Property="Height" Value="23" />
		<Setter Property="Width" Value="90" />
	</Style>

	<Style x:Key="UXListViewItemStretch" TargetType="ListView">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
	</Style>

	<Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
		<Setter Property="GridLinesVisibility" Value="Vertical" />
		<Setter Property="VerticalGridLinesBrush" Value="DarkGray" />
		<Setter Property="AlternatingRowBackground" Value="#66F2E9C1" />
		<Setter Property="RowHeaderWidth" Value="0" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="CanUserReorderColumns" Value="False" />
		<Setter Property="CanUserSortColumns" Value="False" />
		<Setter Property="CanUserAddRows" Value="False" />
		<Setter Property="CanUserDeleteRows" Value="False" />
		<Setter Property="BorderBrush" Value="DarkGray" />
		<Setter Property="BorderThickness" Value="1" />
	</Style>

	<Style x:Key="searchTextBlock" TargetType="TextBlock">
		<Setter Property="TextDecorations" Value="Underline" />
		<Setter Property="Foreground" Value="Blue" />
	</Style>

	<ControlTemplate x:Key="searchToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="10" />
			</Grid.ColumnDefinitions>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
								<EasingColorKeyFrame KeyTime="0" Value="LightGray" />
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
								<EasingColorKeyFrame KeyTime="0" Value="Gray" />
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
								<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
								<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
								<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<!--<VisualState x:Name="Checked">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
								<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>-->
					<VisualState x:Name="Unchecked" />
					<VisualState x:Name="Indeterminate" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="0" BorderBrush="Transparent" Background="Transparent">
			</Border>
			<Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1">
				<Border.Background>
					<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
				</Border.Background>
			</Border>
			<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z">
				<Path.Fill>
					<SolidColorBrush Color="{DynamicResource GlyphColor}" />
				</Path.Fill>
			</Path>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="searchTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="searchComboBox" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="MinWidth" Value="60" />
		<Setter Property="MinHeight" Value="18" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="ToggleButton" Template="{StaticResource searchToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" 
													IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<!--<TextBlock x:Name="ContentSite" Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left" IsHitTestVisible="False"
											 Style="{StaticResource searchTextBlock}" Text="{TemplateBinding SelectionBoxItem}"/>-->
						<ContentPresenter x:Name="ContentSite" Margin="4,2,14,2" VerticalAlignment="Stretch" HorizontalAlignment="Left" IsHitTestVisible="False" 
															Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
						<TextBox x:Name="PART_EditableTextBox" Margin="4,2,14,2" Style="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Background="Transparent" Visibility="Hidden"
										 Focusable="True" IsReadOnly="{TemplateBinding IsReadOnly}" Template="{StaticResource searchTextBox}" />
						<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
							<Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" BorderThickness="1">
									<Border.BorderBrush>
										<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
									</Border.BorderBrush>
									<Border.Background>
										<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
									</Border.Background>
								</Border>
								<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Uneditable" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="30" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="searchComboBoxItem" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
						<ContentPresenter />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style and template for the DataGrid.-->
	<Style x:Key="DataGridStyle2" TargetType="{x:Type DataGrid}">
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border x:Name="border" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Background="Black">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}" Style="{DynamicResource {ComponentResourceKey 
                      ResourceId=DataGridSelectAllButtonStyle, 
                      TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, 
                      ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, 
                      ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" />

										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, 
                      RelativeSource={RelativeSource TemplatedParent}}" />

										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, 
                        RelativeSource={RelativeSource TemplatedParent}}" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="#FFF2E9C1" />
		<Setter Property="Foreground" Value="Maroon" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="FontWeight" Value="Medium" />
		<Setter Property="Height" Value="30" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="BorderBrush" Value="DarkGray" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
	</Style>

	<Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
		<Setter Property="TextBlock.VerticalAlignment" Value="Center" />
	</Style>

	<Style x:Key="DataGridColumnHeaderCenterStyle" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="#FFF2E9C1" />
		<Setter Property="Foreground" Value="Maroon" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="FontWeight" Value="Medium" />
		<Setter Property="Height" Value="30" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="BorderBrush" Value="DarkGray" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
	</Style>
</ResourceDictionary>